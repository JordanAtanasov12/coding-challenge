{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst constants_1 = require(\"../../../constants\");\n\nconst commonExtensions_1 = require(\"./commonExtensions\");\n\nconst extensionsV3_1 = require(\"./extensionsV3\");\n\nfunction hasInheritedUserRoleWithProofs(_user, _domainId, _role) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, _role, _user);\n    return this.hasInheritedUserRole(_user, permissionDomainId, _role, childSkillIndex, _domainId);\n  });\n}\n\nfunction makeExpenditureWithProofs(_domainId, overrides) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, constants_1.ColonyRole.Administration);\n    return this.makeExpenditure(permissionDomainId, childSkillIndex, _domainId, overrides);\n  });\n}\n\nfunction setExpenditureClaimDelayWithProofs(_id, _slot, _claimDelay, overrides) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.setExpenditureClaimDelay(permissionDomainId, childSkillIndex, _id, _slot, _claimDelay, overrides);\n  });\n}\n\nfunction setExpenditurePayoutModifierWithProofs(_id, _slot, _payoutModifier, overrides) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.setExpenditurePayoutModifier(permissionDomainId, childSkillIndex, _id, _slot, _payoutModifier, overrides);\n  });\n}\n\nfunction transferExpenditureViaArbitrationWithProofs(_id, _newOwner, overrides) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.transferExpenditureViaArbitration(permissionDomainId, childSkillIndex, _id, _newOwner, overrides);\n  });\n}\n\nfunction estimateMakeExpenditureWithProofs(_domainId) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, constants_1.ColonyRole.Administration);\n    return this.estimate.makeExpenditure(permissionDomainId, childSkillIndex, _domainId);\n  });\n}\n\nfunction estimateSetExpenditureClaimDelayWithProofs(_id, _slot, _claimDelay) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.estimate.setExpenditureClaimDelay(permissionDomainId, childSkillIndex, _id, _slot, _claimDelay);\n  });\n}\n\nfunction estimateSetExpenditurePayoutModifierWithProofs(_id, _slot, _payoutModifier) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.estimate.setExpenditurePayoutModifier(permissionDomainId, childSkillIndex, _id, _slot, _payoutModifier);\n  });\n}\n\nfunction estimateTransferExpenditureViaArbitrationWithProofs(_newOwner, _id) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const {\n      domainId\n    } = yield this.getExpenditure(_id);\n    const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n    return this.estimate.transferExpenditureViaArbitration(permissionDomainId, childSkillIndex, _id, _newOwner);\n  });\n}\n\nexports.addExtensions = (instance, networkClient) => {\n  // Add all extensions from v3, because these are also still valid\n  const extendedInstance = extensionsV3_1.addExtensions(instance, networkClient);\n  /* eslint-disable no-param-reassign, max-len */\n\n  extendedInstance.hasInheritedUserRoleWithProofs = hasInheritedUserRoleWithProofs.bind(extendedInstance);\n  extendedInstance.makeExpenditureWithProofs = makeExpenditureWithProofs.bind(extendedInstance);\n  extendedInstance.setExpenditureClaimDelayWithProofs = setExpenditureClaimDelayWithProofs.bind(extendedInstance);\n  extendedInstance.setExpenditurePayoutModifierWithProofs = setExpenditurePayoutModifierWithProofs.bind(extendedInstance);\n  extendedInstance.transferExpenditureViaArbitrationWithProofs = transferExpenditureViaArbitrationWithProofs.bind(extendedInstance);\n  extendedInstance.estimate.makeExpenditureWithProofs = estimateMakeExpenditureWithProofs.bind(extendedInstance);\n  extendedInstance.estimate.setExpenditureClaimDelayWithProofs = estimateSetExpenditureClaimDelayWithProofs.bind(extendedInstance);\n  extendedInstance.estimate.setExpenditurePayoutModifierWithProofs = estimateSetExpenditurePayoutModifierWithProofs.bind(extendedInstance);\n  extendedInstance.estimate.transferExpenditureViaArbitrationWithProofs = estimateTransferExpenditureViaArbitrationWithProofs.bind(extendedInstance);\n  /* eslint-enable no-param-reassign, max-len */\n\n  return extendedInstance;\n};","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","constants_1","require","commonExtensions_1","extensionsV3_1","hasInheritedUserRoleWithProofs","_user","_domainId","_role","permissionDomainId","childSkillIndex","getPermissionProofs","hasInheritedUserRole","makeExpenditureWithProofs","overrides","ColonyRole","Administration","makeExpenditure","setExpenditureClaimDelayWithProofs","_id","_slot","_claimDelay","domainId","getExpenditure","Arbitration","setExpenditureClaimDelay","setExpenditurePayoutModifierWithProofs","_payoutModifier","setExpenditurePayoutModifier","transferExpenditureViaArbitrationWithProofs","_newOwner","transferExpenditureViaArbitration","estimateMakeExpenditureWithProofs","estimate","estimateSetExpenditureClaimDelayWithProofs","estimateSetExpenditurePayoutModifierWithProofs","estimateTransferExpenditureViaArbitrationWithProofs","addExtensions","instance","networkClient","extendedInstance","bind"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP copy/coding-challenge-events-list-bootstrap/node_modules/@colony/colony-js/lib/clients/Colony/extensions/extensionsV4.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../../../constants\");\nconst commonExtensions_1 = require(\"./commonExtensions\");\nconst extensionsV3_1 = require(\"./extensionsV3\");\nfunction hasInheritedUserRoleWithProofs(_user, _domainId, _role) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, _role, _user);\n        return this.hasInheritedUserRole(_user, permissionDomainId, _role, childSkillIndex, _domainId);\n    });\n}\nfunction makeExpenditureWithProofs(_domainId, overrides) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, constants_1.ColonyRole.Administration);\n        return this.makeExpenditure(permissionDomainId, childSkillIndex, _domainId, overrides);\n    });\n}\nfunction setExpenditureClaimDelayWithProofs(_id, _slot, _claimDelay, overrides) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.setExpenditureClaimDelay(permissionDomainId, childSkillIndex, _id, _slot, _claimDelay, overrides);\n    });\n}\nfunction setExpenditurePayoutModifierWithProofs(_id, _slot, _payoutModifier, overrides) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.setExpenditurePayoutModifier(permissionDomainId, childSkillIndex, _id, _slot, _payoutModifier, overrides);\n    });\n}\nfunction transferExpenditureViaArbitrationWithProofs(_id, _newOwner, overrides) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.transferExpenditureViaArbitration(permissionDomainId, childSkillIndex, _id, _newOwner, overrides);\n    });\n}\nfunction estimateMakeExpenditureWithProofs(_domainId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, _domainId, constants_1.ColonyRole.Administration);\n        return this.estimate.makeExpenditure(permissionDomainId, childSkillIndex, _domainId);\n    });\n}\nfunction estimateSetExpenditureClaimDelayWithProofs(_id, _slot, _claimDelay) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.estimate.setExpenditureClaimDelay(permissionDomainId, childSkillIndex, _id, _slot, _claimDelay);\n    });\n}\nfunction estimateSetExpenditurePayoutModifierWithProofs(_id, _slot, _payoutModifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.estimate.setExpenditurePayoutModifier(permissionDomainId, childSkillIndex, _id, _slot, _payoutModifier);\n    });\n}\nfunction estimateTransferExpenditureViaArbitrationWithProofs(_newOwner, _id) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domainId } = yield this.getExpenditure(_id);\n        const [permissionDomainId, childSkillIndex] = yield commonExtensions_1.getPermissionProofs(this, domainId, constants_1.ColonyRole.Arbitration);\n        return this.estimate.transferExpenditureViaArbitration(permissionDomainId, childSkillIndex, _id, _newOwner);\n    });\n}\nexports.addExtensions = (instance, networkClient) => {\n    // Add all extensions from v3, because these are also still valid\n    const extendedInstance = extensionsV3_1.addExtensions(instance, networkClient);\n    /* eslint-disable no-param-reassign, max-len */\n    extendedInstance.hasInheritedUserRoleWithProofs = hasInheritedUserRoleWithProofs.bind(extendedInstance);\n    extendedInstance.makeExpenditureWithProofs = makeExpenditureWithProofs.bind(extendedInstance);\n    extendedInstance.setExpenditureClaimDelayWithProofs = setExpenditureClaimDelayWithProofs.bind(extendedInstance);\n    extendedInstance.setExpenditurePayoutModifierWithProofs = setExpenditurePayoutModifierWithProofs.bind(extendedInstance);\n    extendedInstance.transferExpenditureViaArbitrationWithProofs = transferExpenditureViaArbitrationWithProofs.bind(extendedInstance);\n    extendedInstance.estimate.makeExpenditureWithProofs = estimateMakeExpenditureWithProofs.bind(extendedInstance);\n    extendedInstance.estimate.setExpenditureClaimDelayWithProofs = estimateSetExpenditureClaimDelayWithProofs.bind(extendedInstance);\n    extendedInstance.estimate.setExpenditurePayoutModifierWithProofs = estimateSetExpenditurePayoutModifierWithProofs.bind(extendedInstance);\n    extendedInstance.estimate.transferExpenditureViaArbitrationWithProofs = estimateTransferExpenditureViaArbitrationWithProofs.bind(extendedInstance);\n    /* eslint-enable no-param-reassign, max-len */\n    return extendedInstance;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}