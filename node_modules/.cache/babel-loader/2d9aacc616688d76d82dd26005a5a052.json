{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport BigNumber from 'bignumber.js';\nimport { Multicall } from 'ethereum-multicall';\nimport ERC20Abi from './ABI/erc-20-abi.json';\nvar BALANCE = 0;\nvar SYMBOL = 1;\nvar DECIMALS = 2;\nvar NAME = 3;\n/**\r\n * Get balances for the user for all contracts in 1 single jsonrpc call\r\n * @param request The erc20 token balance request\r\n */\n\nexport function getBalancesForEthereumAddress(request) {\n  return __awaiter(this, void 0, void 0, function () {\n    var multicall, contractCallContext, i, token, contractCallResults, tokens, result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (request.formatBalances === undefined) {\n            request.formatBalances = true;\n          }\n\n          multicall = buildMultiCallInstance(request);\n          contractCallContext = [];\n\n          for (i = 0; i < request.contractAddresses.length; i++) {\n            token = request.contractAddresses[i];\n            contractCallContext.push(buildContractCallContext(token, request.ethereumAddress, token));\n          }\n\n          return [4\n          /*yield*/\n          , multicall.call(contractCallContext)];\n\n        case 1:\n          contractCallResults = _a.sent();\n          tokens = [];\n\n          for (result in contractCallResults.results) {\n            tokens.push(buildToken(contractCallResults.results[result], request.formatBalances));\n          }\n\n          return [2\n          /*return*/\n          , {\n            ethereumAddress: request.ethereumAddress,\n            tokens: tokens\n          }];\n      }\n    });\n  });\n}\n/**\r\n * Get balances for all users for all contracts in 1 single jsonrpc call\r\n * @param request The erc20 token balance request\r\n */\n\nexport function getBalancesForEthereumAddresses(request) {\n  return __awaiter(this, void 0, void 0, function () {\n    var multicall, contractCallContext, i, token, u, ethereumAddress, contractCallResults, balanceResults, _loop_1, result;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (request.formatBalances === undefined) {\n            request.formatBalances = true;\n          }\n\n          multicall = buildMultiCallInstance(request);\n          contractCallContext = [];\n\n          for (i = 0; i < request.contractAddresses.length; i++) {\n            token = request.contractAddresses[i];\n\n            for (u = 0; u < request.ethereumAddresses.length; u++) {\n              ethereumAddress = request.ethereumAddresses[u];\n              contractCallContext.push(buildContractCallContext(token + \"_\" + ethereumAddress, ethereumAddress, token));\n            }\n          }\n\n          return [4\n          /*yield*/\n          , multicall.call(contractCallContext)];\n\n        case 1:\n          contractCallResults = _a.sent();\n          balanceResults = [];\n\n          _loop_1 = function (result) {\n            var token = buildToken(contractCallResults.results[result], request.formatBalances);\n            var balanceResult = balanceResults.find(function (balance) {\n              return result.includes(balance.ethereumAddress);\n            });\n\n            if (balanceResult) {\n              balanceResult.tokens.push(token);\n            } else {\n              balanceResults.push({\n                ethereumAddress: result.split('_')[1],\n                tokens: [token]\n              });\n            }\n          };\n\n          for (result in contractCallResults.results) {\n            _loop_1(result);\n          }\n\n          return [2\n          /*return*/\n          , balanceResults];\n      }\n    });\n  });\n}\n/**\r\n * Build the token\r\n * @param tokenInfo The token info\r\n * @param formatBalances The format balances\r\n */\n\nfunction buildToken(tokenInfo, formatBalances) {\n  var decimals = tokenInfo.callsReturnContext[DECIMALS].returnValues[0];\n  return {\n    contractAddress: tokenInfo.originalContractCallContext.contractAddress,\n    symbol: tokenInfo.callsReturnContext[SYMBOL].returnValues[0],\n    decimals: decimals,\n    name: tokenInfo.callsReturnContext[NAME].returnValues[0],\n    balance: formatBalances === true ? new BigNumber(tokenInfo.callsReturnContext[BALANCE].returnValues[0].hex).shiftedBy(decimals * -1).toFixed() : tokenInfo.callsReturnContext[BALANCE].returnValues[0].hex\n  };\n}\n/**\r\n * Build the multicall instance\r\n * @param request The erc20 token balance request\r\n */\n\n\nfunction buildMultiCallInstance(request) {\n  if (request.providerOptions.ethersProvider) {\n    return new Multicall({\n      ethersProvider: request.providerOptions.ethersProvider,\n      multicallCustomContractAddress: request.multicallCustomContractAddress,\n      tryAggregate: true\n    });\n  }\n\n  return new Multicall({\n    web3Instance: request.providerOptions.web3Instance,\n    multicallCustomContractAddress: request.multicallCustomContractAddress,\n    tryAggregate: true\n  });\n}\n/**\r\n * Build contract call context\r\n * @param reference The reference for call\r\n * @param ethereumAddress The ethereum address\r\n * @param contractAddress The contract address\r\n */\n\n\nfunction buildContractCallContext(reference, ethereumAddress, contractAddress) {\n  return {\n    reference: reference,\n    contractAddress: contractAddress,\n    abi: ERC20Abi,\n    calls: [{\n      reference: 'balance',\n      methodName: 'balanceOf',\n      methodParameters: [ethereumAddress]\n    }, {\n      reference: 'symbol',\n      methodName: 'symbol',\n      methodParameters: []\n    }, {\n      reference: 'decimals',\n      methodName: 'decimals',\n      methodParameters: []\n    }, {\n      reference: 'name',\n      methodName: 'name',\n      methodParameters: []\n    }]\n  };\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","BigNumber","Multicall","ERC20Abi","BALANCE","SYMBOL","DECIMALS","NAME","getBalancesForEthereumAddress","request","multicall","contractCallContext","i","token","contractCallResults","tokens","_a","formatBalances","undefined","buildMultiCallInstance","contractAddresses","buildContractCallContext","ethereumAddress","results","buildToken","getBalancesForEthereumAddresses","u","balanceResults","_loop_1","ethereumAddresses","balanceResult","find","balance","includes","split","tokenInfo","decimals","callsReturnContext","returnValues","contractAddress","originalContractCallContext","symbol","name","hex","shiftedBy","toFixed","providerOptions","ethersProvider","multicallCustomContractAddress","tryAggregate","web3Instance","reference","abi","calls","methodName","methodParameters"],"sources":["/Users/jatanasov/Documents/Projects/Colony/coding-challenge-events-list-bootstrap/node_modules/ethereum-erc20-token-balances-multicall/dist/esm/index.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport BigNumber from 'bignumber.js';\r\nimport { Multicall, } from 'ethereum-multicall';\r\nimport ERC20Abi from './ABI/erc-20-abi.json';\r\nvar BALANCE = 0;\r\nvar SYMBOL = 1;\r\nvar DECIMALS = 2;\r\nvar NAME = 3;\r\n/**\r\n * Get balances for the user for all contracts in 1 single jsonrpc call\r\n * @param request The erc20 token balance request\r\n */\r\nexport function getBalancesForEthereumAddress(request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var multicall, contractCallContext, i, token, contractCallResults, tokens, result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (request.formatBalances === undefined) {\r\n                        request.formatBalances = true;\r\n                    }\r\n                    multicall = buildMultiCallInstance(request);\r\n                    contractCallContext = [];\r\n                    for (i = 0; i < request.contractAddresses.length; i++) {\r\n                        token = request.contractAddresses[i];\r\n                        contractCallContext.push(buildContractCallContext(token, request.ethereumAddress, token));\r\n                    }\r\n                    return [4 /*yield*/, multicall.call(contractCallContext)];\r\n                case 1:\r\n                    contractCallResults = _a.sent();\r\n                    tokens = [];\r\n                    for (result in contractCallResults.results) {\r\n                        tokens.push(buildToken(contractCallResults.results[result], request.formatBalances));\r\n                    }\r\n                    return [2 /*return*/, { ethereumAddress: request.ethereumAddress, tokens: tokens }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Get balances for all users for all contracts in 1 single jsonrpc call\r\n * @param request The erc20 token balance request\r\n */\r\nexport function getBalancesForEthereumAddresses(request) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var multicall, contractCallContext, i, token, u, ethereumAddress, contractCallResults, balanceResults, _loop_1, result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (request.formatBalances === undefined) {\r\n                        request.formatBalances = true;\r\n                    }\r\n                    multicall = buildMultiCallInstance(request);\r\n                    contractCallContext = [];\r\n                    for (i = 0; i < request.contractAddresses.length; i++) {\r\n                        token = request.contractAddresses[i];\r\n                        for (u = 0; u < request.ethereumAddresses.length; u++) {\r\n                            ethereumAddress = request.ethereumAddresses[u];\r\n                            contractCallContext.push(buildContractCallContext(token + \"_\" + ethereumAddress, ethereumAddress, token));\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, multicall.call(contractCallContext)];\r\n                case 1:\r\n                    contractCallResults = _a.sent();\r\n                    balanceResults = [];\r\n                    _loop_1 = function (result) {\r\n                        var token = buildToken(contractCallResults.results[result], request.formatBalances);\r\n                        var balanceResult = balanceResults.find(function (balance) {\r\n                            return result.includes(balance.ethereumAddress);\r\n                        });\r\n                        if (balanceResult) {\r\n                            balanceResult.tokens.push(token);\r\n                        }\r\n                        else {\r\n                            balanceResults.push({\r\n                                ethereumAddress: result.split('_')[1],\r\n                                tokens: [token],\r\n                            });\r\n                        }\r\n                    };\r\n                    for (result in contractCallResults.results) {\r\n                        _loop_1(result);\r\n                    }\r\n                    return [2 /*return*/, balanceResults];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Build the token\r\n * @param tokenInfo The token info\r\n * @param formatBalances The format balances\r\n */\r\nfunction buildToken(tokenInfo, formatBalances) {\r\n    var decimals = tokenInfo.callsReturnContext[DECIMALS].returnValues[0];\r\n    return {\r\n        contractAddress: tokenInfo.originalContractCallContext.contractAddress,\r\n        symbol: tokenInfo.callsReturnContext[SYMBOL].returnValues[0],\r\n        decimals: decimals,\r\n        name: tokenInfo.callsReturnContext[NAME].returnValues[0],\r\n        balance: formatBalances === true\r\n            ? new BigNumber(tokenInfo.callsReturnContext[BALANCE].returnValues[0].hex)\r\n                .shiftedBy(decimals * -1)\r\n                .toFixed()\r\n            : tokenInfo.callsReturnContext[BALANCE].returnValues[0].hex,\r\n    };\r\n}\r\n/**\r\n * Build the multicall instance\r\n * @param request The erc20 token balance request\r\n */\r\nfunction buildMultiCallInstance(request) {\r\n    if (request.providerOptions.ethersProvider) {\r\n        return new Multicall({\r\n            ethersProvider: request.providerOptions.ethersProvider,\r\n            multicallCustomContractAddress: request.multicallCustomContractAddress,\r\n            tryAggregate: true,\r\n        });\r\n    }\r\n    return new Multicall({\r\n        web3Instance: request.providerOptions.web3Instance,\r\n        multicallCustomContractAddress: request.multicallCustomContractAddress,\r\n        tryAggregate: true,\r\n    });\r\n}\r\n/**\r\n * Build contract call context\r\n * @param reference The reference for call\r\n * @param ethereumAddress The ethereum address\r\n * @param contractAddress The contract address\r\n */\r\nfunction buildContractCallContext(reference, ethereumAddress, contractAddress) {\r\n    return {\r\n        reference: reference,\r\n        contractAddress: contractAddress,\r\n        abi: ERC20Abi,\r\n        calls: [\r\n            {\r\n                reference: 'balance',\r\n                methodName: 'balanceOf',\r\n                methodParameters: [ethereumAddress],\r\n            },\r\n            {\r\n                reference: 'symbol',\r\n                methodName: 'symbol',\r\n                methodParameters: [],\r\n            },\r\n            {\r\n                reference: 'decimals',\r\n                methodName: 'decimals',\r\n                methodParameters: [],\r\n            },\r\n            {\r\n                reference: 'name',\r\n                methodName: 'name',\r\n                methodParameters: [],\r\n            },\r\n        ],\r\n    };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}