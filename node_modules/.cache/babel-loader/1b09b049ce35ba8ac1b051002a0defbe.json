{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst constants_1 = require(\"../constants\");\n\nconst TokenLockingFactory_1 = require(\"../contracts/4/TokenLockingFactory\");\n\nconst getTokenLockingClient = (address, signerOrProvider) => {\n  const tokenLockingClient = TokenLockingFactory_1.TokenLockingFactory.connect(address, signerOrProvider);\n  tokenLockingClient.clientType = constants_1.ClientType.TokenLockingClient;\n  return tokenLockingClient;\n};\n\nexports.default = getTokenLockingClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","constants_1","require","TokenLockingFactory_1","getTokenLockingClient","address","signerOrProvider","tokenLockingClient","TokenLockingFactory","connect","clientType","ClientType","TokenLockingClient","default"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP copy/coding-challenge-events-list-bootstrap/node_modules/@colony/colony-js/lib/clients/TokenLockingClient.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst TokenLockingFactory_1 = require(\"../contracts/4/TokenLockingFactory\");\nconst getTokenLockingClient = (address, signerOrProvider) => {\n    const tokenLockingClient = TokenLockingFactory_1.TokenLockingFactory.connect(address, signerOrProvider);\n    tokenLockingClient.clientType = constants_1.ClientType.TokenLockingClient;\n    return tokenLockingClient;\n};\nexports.default = getTokenLockingClient;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,oCAAD,CAArC;;AACA,MAAME,qBAAqB,GAAG,CAACC,OAAD,EAAUC,gBAAV,KAA+B;EACzD,MAAMC,kBAAkB,GAAGJ,qBAAqB,CAACK,mBAAtB,CAA0CC,OAA1C,CAAkDJ,OAAlD,EAA2DC,gBAA3D,CAA3B;EACAC,kBAAkB,CAACG,UAAnB,GAAgCT,WAAW,CAACU,UAAZ,CAAuBC,kBAAvD;EACA,OAAOL,kBAAP;AACH,CAJD;;AAKAR,OAAO,CAACc,OAAR,GAAkBT,qBAAlB"},"metadata":{},"sourceType":"script"}