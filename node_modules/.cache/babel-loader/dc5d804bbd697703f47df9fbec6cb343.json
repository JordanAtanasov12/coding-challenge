{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // A minimal version of the ColonyClient contract that only supports the `version` method\n\nconst ethers_1 = require(\"ethers\");\n\nconst abi = [{\n  constant: true,\n  inputs: [],\n  name: 'version',\n  outputs: [{\n    name: 'colonyVersion',\n    type: 'uint256'\n  }],\n  payable: false,\n  stateMutability: 'pure',\n  type: 'function'\n}];\n\nfunction getColonyVersionClient(address, signerOrProvider) {\n  return new ethers_1.Contract(address, abi, signerOrProvider);\n}\n\nexports.default = getColonyVersionClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","ethers_1","require","abi","constant","inputs","name","outputs","type","payable","stateMutability","getColonyVersionClient","address","signerOrProvider","Contract","default"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP/coding-challenge-events-list-bootstrap/node_modules/@colony/colony-js/lib/clients/Colony/ColonyVersionClient.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// A minimal version of the ColonyClient contract that only supports the `version` method\nconst ethers_1 = require(\"ethers\");\nconst abi = [\n    {\n        constant: true,\n        inputs: [],\n        name: 'version',\n        outputs: [\n            {\n                name: 'colonyVersion',\n                type: 'uint256',\n            },\n        ],\n        payable: false,\n        stateMutability: 'pure',\n        type: 'function',\n    },\n];\nfunction getColonyVersionClient(address, signerOrProvider) {\n    return new ethers_1.Contract(address, abi, signerOrProvider);\n}\nexports.default = getColonyVersionClient;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C,E,CACA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,GAAG,GAAG,CACR;EACIC,QAAQ,EAAE,IADd;EAEIC,MAAM,EAAE,EAFZ;EAGIC,IAAI,EAAE,SAHV;EAIIC,OAAO,EAAE,CACL;IACID,IAAI,EAAE,eADV;IAEIE,IAAI,EAAE;EAFV,CADK,CAJb;EAUIC,OAAO,EAAE,KAVb;EAWIC,eAAe,EAAE,MAXrB;EAYIF,IAAI,EAAE;AAZV,CADQ,CAAZ;;AAgBA,SAASG,sBAAT,CAAgCC,OAAhC,EAAyCC,gBAAzC,EAA2D;EACvD,OAAO,IAAIZ,QAAQ,CAACa,QAAb,CAAsBF,OAAtB,EAA+BT,GAA/B,EAAoCU,gBAApC,CAAP;AACH;;AACDd,OAAO,CAACgB,OAAR,GAAkBJ,sBAAlB"},"metadata":{},"sourceType":"script"}