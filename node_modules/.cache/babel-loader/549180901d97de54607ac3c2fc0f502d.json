{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst constants_1 = require(\"../constants\");\n\nconst OneTxPaymentDeployerFactory_1 = require(\"../contracts/1/OneTxPaymentDeployerFactory\");\n\nconst getOneTxPaymentFactoryClient = (network, signerOrProvider, address) => {\n  const oneTxPaymentFactoryAddress = address || constants_1.oneTxPaymentFactoryAddresses[network];\n\n  if (!oneTxPaymentFactoryAddress) {\n    throw new Error(`Could not get OneTxPaymentFactory address for ${network}. Please specify`);\n  }\n\n  const oneTxPaymentClient = OneTxPaymentDeployerFactory_1.OneTxPaymentDeployerFactory.connect(oneTxPaymentFactoryAddress, signerOrProvider);\n  oneTxPaymentClient.clientType = constants_1.ClientType.OneTxPaymentClient;\n  return oneTxPaymentClient;\n};\n\nexports.default = getOneTxPaymentFactoryClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","constants_1","require","OneTxPaymentDeployerFactory_1","getOneTxPaymentFactoryClient","network","signerOrProvider","address","oneTxPaymentFactoryAddress","oneTxPaymentFactoryAddresses","Error","oneTxPaymentClient","OneTxPaymentDeployerFactory","connect","clientType","ClientType","OneTxPaymentClient","default"],"sources":["/Users/jatanasov/Documents/Projects/Colony/coding-challenge-events-list-bootstrap/node_modules/@colony/colony-js/lib/clients/OneTxPaymentDeployerClient.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"../constants\");\nconst OneTxPaymentDeployerFactory_1 = require(\"../contracts/1/OneTxPaymentDeployerFactory\");\nconst getOneTxPaymentFactoryClient = (network, signerOrProvider, address) => {\n    const oneTxPaymentFactoryAddress = address || constants_1.oneTxPaymentFactoryAddresses[network];\n    if (!oneTxPaymentFactoryAddress) {\n        throw new Error(`Could not get OneTxPaymentFactory address for ${network}. Please specify`);\n    }\n    const oneTxPaymentClient = OneTxPaymentDeployerFactory_1.OneTxPaymentDeployerFactory.connect(oneTxPaymentFactoryAddress, signerOrProvider);\n    oneTxPaymentClient.clientType = constants_1.ClientType.OneTxPaymentClient;\n    return oneTxPaymentClient;\n};\nexports.default = getOneTxPaymentFactoryClient;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,MAAMC,6BAA6B,GAAGD,OAAO,CAAC,4CAAD,CAA7C;;AACA,MAAME,4BAA4B,GAAG,CAACC,OAAD,EAAUC,gBAAV,EAA4BC,OAA5B,KAAwC;EACzE,MAAMC,0BAA0B,GAAGD,OAAO,IAAIN,WAAW,CAACQ,4BAAZ,CAAyCJ,OAAzC,CAA9C;;EACA,IAAI,CAACG,0BAAL,EAAiC;IAC7B,MAAM,IAAIE,KAAJ,CAAW,iDAAgDL,OAAQ,kBAAnE,CAAN;EACH;;EACD,MAAMM,kBAAkB,GAAGR,6BAA6B,CAACS,2BAA9B,CAA0DC,OAA1D,CAAkEL,0BAAlE,EAA8FF,gBAA9F,CAA3B;EACAK,kBAAkB,CAACG,UAAnB,GAAgCb,WAAW,CAACc,UAAZ,CAAuBC,kBAAvD;EACA,OAAOL,kBAAP;AACH,CARD;;AASAZ,OAAO,CAACkB,OAAR,GAAkBb,4BAAlB"},"metadata":{},"sourceType":"script"}