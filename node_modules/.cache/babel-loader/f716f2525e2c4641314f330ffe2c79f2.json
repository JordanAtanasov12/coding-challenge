{"ast":null,"code":"'use strict';\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"../constants\");\n\nvar errors = __importStar(require(\"../errors\"));\n\nvar bignumber_1 = require(\"./bignumber\");\n\nvar names = ['wei', 'kwei', 'Mwei', 'Gwei', 'szabo', 'finney', 'ether'];\nvar unitInfos = {};\n\nfunction _getUnitInfo(value) {\n  return {\n    decimals: value.length - 1,\n    tenPower: bignumber_1.bigNumberify(value)\n  };\n} // Build cache of common units\n\n\n(function () {\n  // Cache the common units\n  var value = '1';\n  names.forEach(function (name) {\n    var info = _getUnitInfo(value);\n\n    unitInfos[name.toLowerCase()] = info;\n    unitInfos[String(info.decimals)] = info;\n    value += '000';\n  });\n})();\n\nfunction getUnitInfo(name) {\n  // Try the cache\n  var info = unitInfos[String(name).toLowerCase()];\n\n  if (!info && typeof name === 'number' && parseInt(String(name)) == name && name >= 0 && name <= 256) {\n    var value = '1';\n\n    for (var i = 0; i < name; i++) {\n      value += '0';\n    }\n\n    info = _getUnitInfo(value);\n  } // Make sure we got something\n\n\n  if (!info) {\n    errors.throwError('invalid unitType', errors.INVALID_ARGUMENT, {\n      argument: 'name',\n      value: name\n    });\n  }\n\n  return info;\n} // Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\n\n\nfunction commify(value) {\n  var comps = String(value).split('.');\n\n  if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === '.' || value === '-.') {\n    errors.throwError('invalid value', errors.INVALID_ARGUMENT, {\n      argument: 'value',\n      value: value\n    });\n  } // Make sure we have at least one whole digit (0 if none)\n\n\n  var whole = comps[0];\n  var negative = '';\n\n  if (whole.substring(0, 1) === '-') {\n    negative = '-';\n    whole = whole.substring(1);\n  } // Make sure we have at least 1 whole digit with no leading zeros\n\n\n  while (whole.substring(0, 1) === '0') {\n    whole = whole.substring(1);\n  }\n\n  if (whole === '') {\n    whole = '0';\n  }\n\n  var suffix = '';\n\n  if (comps.length === 2) {\n    suffix = '.' + (comps[1] || '0');\n  }\n\n  var formatted = [];\n\n  while (whole.length) {\n    if (whole.length <= 3) {\n      formatted.unshift(whole);\n      break;\n    } else {\n      var index = whole.length - 3;\n      formatted.unshift(whole.substring(index));\n      whole = whole.substring(0, index);\n    }\n  }\n\n  return negative + formatted.join(',') + suffix;\n}\n\nexports.commify = commify;\n\nfunction formatUnits(value, unitType) {\n  var unitInfo = getUnitInfo(unitType); // Make sure wei is a big number (convert as necessary)\n\n  value = bignumber_1.bigNumberify(value);\n  var negative = value.lt(constants_1.Zero);\n\n  if (negative) {\n    value = value.mul(constants_1.NegativeOne);\n  }\n\n  var fraction = value.mod(unitInfo.tenPower).toString();\n\n  while (fraction.length < unitInfo.decimals) {\n    fraction = '0' + fraction;\n  } // Strip training 0\n\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  var whole = value.div(unitInfo.tenPower).toString();\n  value = whole + '.' + fraction;\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nexports.formatUnits = formatUnits;\n\nfunction parseUnits(value, unitType) {\n  if (unitType == null) {\n    unitType = 18;\n  }\n\n  var unitInfo = getUnitInfo(unitType);\n\n  if (typeof value !== 'string' || !value.match(/^-?[0-9.,]+$/)) {\n    errors.throwError('invalid decimal value', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  if (unitInfo.decimals === 0) {\n    return bignumber_1.bigNumberify(value);\n  } // Is it negative?\n\n\n  var negative = value.substring(0, 1) === '-';\n\n  if (negative) {\n    value = value.substring(1);\n  }\n\n  if (value === '.') {\n    errors.throwError('missing value', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  } // Split it into a whole and fractional part\n\n\n  var comps = value.split('.');\n\n  if (comps.length > 2) {\n    errors.throwError('too many decimal points', errors.INVALID_ARGUMENT, {\n      arg: 'value',\n      value: value\n    });\n  }\n\n  var whole = comps[0],\n      fraction = comps[1];\n\n  if (!whole) {\n    whole = '0';\n  }\n\n  if (!fraction) {\n    fraction = '0';\n  } // Prevent underflow\n\n\n  if (fraction.length > unitInfo.decimals) {\n    errors.throwError('underflow occurred', errors.NUMERIC_FAULT, {\n      operation: 'division',\n      fault: \"underflow\"\n    });\n  } // Fully pad the string with zeros to get to wei\n\n\n  while (fraction.length < unitInfo.decimals) {\n    fraction += '0';\n  }\n\n  var wholeValue = bignumber_1.bigNumberify(whole);\n  var fractionValue = bignumber_1.bigNumberify(fraction);\n  var wei = wholeValue.mul(unitInfo.tenPower).add(fractionValue);\n\n  if (negative) {\n    wei = wei.mul(constants_1.NegativeOne);\n  }\n\n  return wei;\n}\n\nexports.parseUnits = parseUnits;\n\nfunction formatEther(wei) {\n  return formatUnits(wei, 18);\n}\n\nexports.formatEther = formatEther;\n\nfunction parseEther(ether) {\n  return parseUnits(ether, 18);\n}\n\nexports.parseEther = parseEther;","map":{"version":3,"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","constants_1","require","errors","bignumber_1","names","unitInfos","_getUnitInfo","decimals","length","tenPower","bigNumberify","forEach","name","info","toLowerCase","String","getUnitInfo","parseInt","i","throwError","INVALID_ARGUMENT","argument","commify","comps","split","match","whole","negative","substring","suffix","formatted","unshift","index","join","formatUnits","unitType","unitInfo","lt","Zero","mul","NegativeOne","fraction","toString","div","parseUnits","arg","NUMERIC_FAULT","operation","fault","wholeValue","fractionValue","wei","add","formatEther","parseEther","ether"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP/coding-challenge-events-list-bootstrap/node_modules/ethers/utils/units.js"],"sourcesContent":["'use strict';\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar errors = __importStar(require(\"../errors\"));\nvar bignumber_1 = require(\"./bignumber\");\nvar names = [\n    'wei',\n    'kwei',\n    'Mwei',\n    'Gwei',\n    'szabo',\n    'finney',\n    'ether',\n];\nvar unitInfos = {};\nfunction _getUnitInfo(value) {\n    return {\n        decimals: value.length - 1,\n        tenPower: bignumber_1.bigNumberify(value)\n    };\n}\n// Build cache of common units\n(function () {\n    // Cache the common units\n    var value = '1';\n    names.forEach(function (name) {\n        var info = _getUnitInfo(value);\n        unitInfos[name.toLowerCase()] = info;\n        unitInfos[String(info.decimals)] = info;\n        value += '000';\n    });\n})();\nfunction getUnitInfo(name) {\n    // Try the cache\n    var info = unitInfos[String(name).toLowerCase()];\n    if (!info && typeof (name) === 'number' && parseInt(String(name)) == name && name >= 0 && name <= 256) {\n        var value = '1';\n        for (var i = 0; i < name; i++) {\n            value += '0';\n        }\n        info = _getUnitInfo(value);\n    }\n    // Make sure we got something\n    if (!info) {\n        errors.throwError('invalid unitType', errors.INVALID_ARGUMENT, { argument: 'name', value: name });\n    }\n    return info;\n}\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nfunction commify(value) {\n    var comps = String(value).split('.');\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === '.' || value === '-.') {\n        errors.throwError('invalid value', errors.INVALID_ARGUMENT, { argument: 'value', value: value });\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    var whole = comps[0];\n    var negative = '';\n    if (whole.substring(0, 1) === '-') {\n        negative = '-';\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === '0') {\n        whole = whole.substring(1);\n    }\n    if (whole === '') {\n        whole = '0';\n    }\n    var suffix = '';\n    if (comps.length === 2) {\n        suffix = '.' + (comps[1] || '0');\n    }\n    var formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            var index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(',') + suffix;\n}\nexports.commify = commify;\nfunction formatUnits(value, unitType) {\n    var unitInfo = getUnitInfo(unitType);\n    // Make sure wei is a big number (convert as necessary)\n    value = bignumber_1.bigNumberify(value);\n    var negative = value.lt(constants_1.Zero);\n    if (negative) {\n        value = value.mul(constants_1.NegativeOne);\n    }\n    var fraction = value.mod(unitInfo.tenPower).toString();\n    while (fraction.length < unitInfo.decimals) {\n        fraction = '0' + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    var whole = value.div(unitInfo.tenPower).toString();\n    value = whole + '.' + fraction;\n    if (negative) {\n        value = '-' + value;\n    }\n    return value;\n}\nexports.formatUnits = formatUnits;\nfunction parseUnits(value, unitType) {\n    if (unitType == null) {\n        unitType = 18;\n    }\n    var unitInfo = getUnitInfo(unitType);\n    if (typeof (value) !== 'string' || !value.match(/^-?[0-9.,]+$/)) {\n        errors.throwError('invalid decimal value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    if (unitInfo.decimals === 0) {\n        return bignumber_1.bigNumberify(value);\n    }\n    // Is it negative?\n    var negative = (value.substring(0, 1) === '-');\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === '.') {\n        errors.throwError('missing value', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    // Split it into a whole and fractional part\n    var comps = value.split('.');\n    if (comps.length > 2) {\n        errors.throwError('too many decimal points', errors.INVALID_ARGUMENT, { arg: 'value', value: value });\n    }\n    var whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = '0';\n    }\n    if (!fraction) {\n        fraction = '0';\n    }\n    // Prevent underflow\n    if (fraction.length > unitInfo.decimals) {\n        errors.throwError('underflow occurred', errors.NUMERIC_FAULT, { operation: 'division', fault: \"underflow\" });\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < unitInfo.decimals) {\n        fraction += '0';\n    }\n    var wholeValue = bignumber_1.bigNumberify(whole);\n    var fractionValue = bignumber_1.bigNumberify(fraction);\n    var wei = (wholeValue.mul(unitInfo.tenPower)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(constants_1.NegativeOne);\n    }\n    return wei;\n}\nexports.parseUnits = parseUnits;\nfunction formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexports.formatEther = formatEther;\nfunction parseEther(ether) {\n    return parseUnits(ether, 18);\n}\nexports.parseEther = parseEther;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}