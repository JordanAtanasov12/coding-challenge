export declare enum ColonyVersion {
    GoerliGlider = 1,
    Glider = 2,
    AuburnGlider = 3,
    BurgundyGlider = 4
}
export declare const CurrentVersion = ColonyVersion.BurgundyGlider;
export declare enum Network {
    Mainnet = "mainnet",
    Goerli = "goerli",
    Local = "local"
}
export declare enum ColonyRole {
    Recovery = 0,
    Root = 1,
    Arbitration = 2,
    Architecture = 3,
    ArchitectureSubdomain_DEPRECATED = 4,
    Funding = 5,
    Administration = 6
}
export declare type DomainRoles = {
    domainId: number;
    roles: ColonyRole[];
};
export declare type UserRoles = {
    address: string;
    domains: DomainRoles[];
};
export declare type ColonyRoles = UserRoles[];
export declare enum ClientType {
    ColonyClient = "ColonyClient",
    NetworkClient = "NetworkClient",
    OneTxPaymentClient = "OneTxPaymentClient",
    OneTxPaymentFactoryClient = "OneTxPaymentFactoryClient",
    TokenClient = "TokenClient",
    TokenLockingClient = "TokenLockingClient"
}
export declare enum TokenClientType {
    Colony = "Colony",
    Erc20 = "Erc20",
    Dai = "Dai"
}
export declare const colonyNetworkAddresses: {
    mainnet: string;
    goerli: string;
    local: undefined;
};
export declare const oneTxPaymentFactoryAddresses: {
    mainnet: string;
    goerli: string;
    local: undefined;
};
export declare const ROOT_DOMAIN_ID = 1;
export declare enum FundingPotAssociatedType {
    Unassigned = 0,
    Domain = 1,
    Task = 2,
    Payment = 3,
    Expenditure = 4
}
export declare const REPUTATION_ORACLE_ENDPOINT = "https://colony.io/reputation";
export declare const tokenAddresses: {
    SAI: string;
};
