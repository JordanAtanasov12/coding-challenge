{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nvar base_provider_1 = require(\"./base-provider\");\n\nvar abstract_signer_1 = require(\"../abstract-signer\");\n\nvar errors = __importStar(require(\"../errors\"));\n\nvar address_1 = require(\"../utils/address\");\n\nvar bytes_1 = require(\"../utils/bytes\");\n\nvar networks_1 = require(\"../utils/networks\");\n\nvar properties_1 = require(\"../utils/properties\");\n\nvar utf8_1 = require(\"../utils/utf8\");\n\nvar web_1 = require(\"../utils/web\");\n\nfunction timer(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve();\n    }, timeout);\n  });\n}\n\nfunction getResult(payload) {\n  if (payload.error) {\n    // @TODO: not any\n    var error = new Error(payload.error.message);\n    error.code = payload.error.code;\n    error.data = payload.error.data;\n    throw error;\n  }\n\n  return payload.result;\n}\n\nfunction getLowerCase(value) {\n  if (value) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\n\nvar _constructorGuard = {}; // Some environments (Trust Wallet and company) use a global map\n// to track JSON-RPC ID, so we try to keep IDs unique across all\n// connections. See #489.\n\nvar _nextId = 42;\n\nvar JsonRpcSigner =\n/** @class */\nfunction (_super) {\n  __extends(JsonRpcSigner, _super);\n\n  function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n    var _this = _super.call(this) || this;\n\n    errors.checkNew(_this, JsonRpcSigner);\n\n    if (constructorGuard !== _constructorGuard) {\n      throw new Error('do not call the JsonRpcSigner constructor directly; use provider.getSigner');\n    }\n\n    properties_1.defineReadOnly(_this, 'provider', provider); // Statically attach to a given address\n\n    if (addressOrIndex) {\n      if (typeof addressOrIndex === 'string') {\n        properties_1.defineReadOnly(_this, '_address', address_1.getAddress(addressOrIndex));\n      } else if (typeof addressOrIndex === 'number') {\n        properties_1.defineReadOnly(_this, '_index', addressOrIndex);\n      } else {\n        errors.throwError('invalid address or index', errors.INVALID_ARGUMENT, {\n          argument: 'addressOrIndex',\n          value: addressOrIndex\n        });\n      }\n    } else {\n      properties_1.defineReadOnly(_this, '_index', 0);\n    }\n\n    return _this;\n  }\n\n  JsonRpcSigner.prototype.getAddress = function () {\n    var _this = this;\n\n    if (this._address) {\n      return Promise.resolve(this._address);\n    }\n\n    return this.provider.send('eth_accounts', []).then(function (accounts) {\n      if (accounts.length <= _this._index) {\n        errors.throwError('unknown account #' + _this._index, errors.UNSUPPORTED_OPERATION, {\n          operation: 'getAddress'\n        });\n      }\n\n      _this._address = address_1.getAddress(accounts[_this._index]);\n      return _this._address;\n    });\n  };\n\n  JsonRpcSigner.prototype.getBalance = function (blockTag) {\n    return this.provider.getBalance(this.getAddress(), blockTag);\n  };\n\n  JsonRpcSigner.prototype.getTransactionCount = function (blockTag) {\n    return this.provider.getTransactionCount(this.getAddress(), blockTag);\n  };\n\n  JsonRpcSigner.prototype.sendUncheckedTransaction = function (transaction) {\n    var _this = this;\n\n    transaction = properties_1.shallowCopy(transaction);\n    var fromAddress = this.getAddress().then(function (address) {\n      if (address) {\n        address = address.toLowerCase();\n      }\n\n      return address;\n    }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n    // wishes to use this, it is easy to specify explicitly, otherwise\n    // we look it up for them.\n\n    if (transaction.gasLimit == null) {\n      var estimate = properties_1.shallowCopy(transaction);\n      estimate.from = fromAddress;\n      transaction.gasLimit = this.provider.estimateGas(estimate);\n    }\n\n    return Promise.all([properties_1.resolveProperties(transaction), fromAddress]).then(function (results) {\n      var tx = results[0];\n      var hexTx = JsonRpcProvider.hexlifyTransaction(tx);\n      hexTx.from = results[1];\n      return _this.provider.send('eth_sendTransaction', [hexTx]).then(function (hash) {\n        return hash;\n      }, function (error) {\n        if (error.responseText) {\n          // See: JsonRpcProvider.sendTransaction (@TODO: Expose a ._throwError??)\n          if (error.responseText.indexOf('insufficient funds') >= 0) {\n            errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {\n              transaction: tx\n            });\n          }\n\n          if (error.responseText.indexOf('nonce too low') >= 0) {\n            errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {\n              transaction: tx\n            });\n          }\n\n          if (error.responseText.indexOf('replacement transaction underpriced') >= 0) {\n            errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {\n              transaction: tx\n            });\n          }\n        }\n\n        throw error;\n      });\n    });\n  };\n\n  JsonRpcSigner.prototype.sendTransaction = function (transaction) {\n    var _this = this;\n\n    return this.sendUncheckedTransaction(transaction).then(function (hash) {\n      return web_1.poll(function () {\n        return _this.provider.getTransaction(hash).then(function (tx) {\n          if (tx === null) {\n            return undefined;\n          }\n\n          return _this.provider._wrapTransaction(tx, hash);\n        });\n      }, {\n        fastRetry: 250,\n        onceBlock: _this.provider\n      }).catch(function (error) {\n        error.transactionHash = hash;\n        throw error;\n      });\n    });\n  };\n\n  JsonRpcSigner.prototype.signMessage = function (message) {\n    var _this = this;\n\n    var data = typeof message === 'string' ? utf8_1.toUtf8Bytes(message) : message;\n    return this.getAddress().then(function (address) {\n      // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n      return _this.provider.send('eth_sign', [address.toLowerCase(), bytes_1.hexlify(data)]);\n    });\n  };\n\n  JsonRpcSigner.prototype.unlock = function (password) {\n    var provider = this.provider;\n    return this.getAddress().then(function (address) {\n      return provider.send('personal_unlockAccount', [address.toLowerCase(), password, null]);\n    });\n  };\n\n  return JsonRpcSigner;\n}(abstract_signer_1.Signer);\n\nexports.JsonRpcSigner = JsonRpcSigner;\nvar allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\n\nvar JsonRpcProvider =\n/** @class */\nfunction (_super) {\n  __extends(JsonRpcProvider, _super);\n\n  function JsonRpcProvider(url, network) {\n    var _this = this; // One parameter, but it is a network name, so swap it with the URL\n\n\n    if (typeof url === 'string') {\n      if (network === null && networks_1.getNetwork(url)) {\n        network = url;\n        url = null;\n      }\n    }\n\n    if (network) {\n      // The network has been specified explicitly, we can use it\n      _this = _super.call(this, network) || this;\n    } else {\n      // The network is unknown, query the JSON-RPC for it\n      var ready = new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          _this.send('net_version', []).then(function (result) {\n            return resolve(networks_1.getNetwork(parseInt(result)));\n          }).catch(function (error) {\n            reject(error);\n          });\n        });\n      });\n      _this = _super.call(this, ready) || this;\n    }\n\n    errors.checkNew(_this, JsonRpcProvider); // Default URL\n\n    if (!url) {\n      url = 'http://localhost:8545';\n    }\n\n    if (typeof url === 'string') {\n      _this.connection = {\n        url: url\n      };\n    } else {\n      _this.connection = url;\n    }\n\n    return _this;\n  }\n\n  JsonRpcProvider.prototype.getSigner = function (addressOrIndex) {\n    return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n  };\n\n  JsonRpcProvider.prototype.listAccounts = function () {\n    return this.send('eth_accounts', []).then(function (accounts) {\n      return accounts.map(function (a) {\n        return address_1.getAddress(a);\n      });\n    });\n  };\n\n  JsonRpcProvider.prototype.send = function (method, params) {\n    var _this = this;\n\n    var request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return web_1.fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {\n      _this.emit('debug', {\n        action: 'send',\n        request: request,\n        response: result,\n        provider: _this\n      });\n\n      return result;\n    });\n  };\n\n  JsonRpcProvider.prototype.perform = function (method, params) {\n    switch (method) {\n      case 'getBlockNumber':\n        return this.send('eth_blockNumber', []);\n\n      case 'getGasPrice':\n        return this.send('eth_gasPrice', []);\n\n      case 'getBalance':\n        return this.send('eth_getBalance', [getLowerCase(params.address), params.blockTag]);\n\n      case 'getTransactionCount':\n        return this.send('eth_getTransactionCount', [getLowerCase(params.address), params.blockTag]);\n\n      case 'getCode':\n        return this.send('eth_getCode', [getLowerCase(params.address), params.blockTag]);\n\n      case 'getStorageAt':\n        return this.send('eth_getStorageAt', [getLowerCase(params.address), params.position, params.blockTag]);\n\n      case 'sendTransaction':\n        return this.send('eth_sendRawTransaction', [params.signedTransaction]).catch(function (error) {\n          if (error.responseText) {\n            // \"insufficient funds for gas * price + value\"\n            if (error.responseText.indexOf('insufficient funds') > 0) {\n              errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n            } // \"nonce too low\"\n\n\n            if (error.responseText.indexOf('nonce too low') > 0) {\n              errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n            } // \"replacement transaction underpriced\"\n\n\n            if (error.responseText.indexOf('replacement transaction underpriced') > 0) {\n              errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n            }\n          }\n\n          throw error;\n        });\n\n      case 'getBlock':\n        if (params.blockTag) {\n          return this.send('eth_getBlockByNumber', [params.blockTag, !!params.includeTransactions]);\n        } else if (params.blockHash) {\n          return this.send('eth_getBlockByHash', [params.blockHash, !!params.includeTransactions]);\n        }\n\n        return Promise.reject(new Error('invalid block tag or block hash'));\n\n      case 'getTransaction':\n        return this.send('eth_getTransactionByHash', [params.transactionHash]);\n\n      case 'getTransactionReceipt':\n        return this.send('eth_getTransactionReceipt', [params.transactionHash]);\n\n      case 'call':\n        return this.send('eth_call', [JsonRpcProvider.hexlifyTransaction(params.transaction, {\n          from: true\n        }), params.blockTag]);\n\n      case 'estimateGas':\n        return this.send('eth_estimateGas', [JsonRpcProvider.hexlifyTransaction(params.transaction, {\n          from: true\n        })]);\n\n      case 'getLogs':\n        if (params.filter && params.filter.address != null) {\n          params.filter.address = getLowerCase(params.filter.address);\n        }\n\n        return this.send('eth_getLogs', [params.filter]);\n\n      default:\n        break;\n    }\n\n    errors.throwError(method + ' not implemented', errors.NOT_IMPLEMENTED, {\n      operation: method\n    });\n    return null;\n  };\n\n  JsonRpcProvider.prototype._startPending = function () {\n    if (this._pendingFilter != null) {\n      return;\n    }\n\n    var self = this;\n    var pendingFilter = this.send('eth_newPendingTransactionFilter', []);\n    this._pendingFilter = pendingFilter;\n    pendingFilter.then(function (filterId) {\n      function poll() {\n        self.send('eth_getFilterChanges', [filterId]).then(function (hashes) {\n          if (self._pendingFilter != pendingFilter) {\n            return null;\n          }\n\n          var seq = Promise.resolve();\n          hashes.forEach(function (hash) {\n            // @TODO: This should be garbage collected at some point... How? When?\n            self._emitted['t:' + hash.toLowerCase()] = 'pending';\n            seq = seq.then(function () {\n              return self.getTransaction(hash).then(function (tx) {\n                self.emit('pending', tx);\n                return null;\n              });\n            });\n          });\n          return seq.then(function () {\n            return timer(1000);\n          });\n        }).then(function () {\n          if (self._pendingFilter != pendingFilter) {\n            self.send('eth_uninstallFilter', [filterId]);\n            return;\n          }\n\n          setTimeout(function () {\n            poll();\n          }, 0);\n          return null;\n        }).catch(function (error) {});\n      }\n\n      poll();\n      return filterId;\n    }).catch(function (error) {});\n  };\n\n  JsonRpcProvider.prototype._stopPending = function () {\n    this._pendingFilter = null;\n  }; // Convert an ethers.js transaction into a JSON-RPC transaction\n  //  - gasLimit => gas\n  //  - All values hexlified\n  //  - All numeric values zero-striped\n  // NOTE: This allows a TransactionRequest, but all values should be resolved\n  //       before this is called\n\n\n  JsonRpcProvider.hexlifyTransaction = function (transaction, allowExtra) {\n    // Check only allowed properties are given\n    var allowed = properties_1.shallowCopy(allowedTransactionKeys);\n\n    if (allowExtra) {\n      for (var key in allowExtra) {\n        if (allowExtra[key]) {\n          allowed[key] = true;\n        }\n      }\n    }\n\n    properties_1.checkProperties(transaction, allowed);\n    var result = {}; // Some nodes (INFURA ropsten; INFURA mainnet is fine) don't like leading zeros.\n\n    ['gasLimit', 'gasPrice', 'nonce', 'value'].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      var value = bytes_1.hexStripZeros(bytes_1.hexlify(transaction[key]));\n\n      if (key === 'gasLimit') {\n        key = 'gas';\n      }\n\n      result[key] = value;\n    });\n    ['from', 'to', 'data'].forEach(function (key) {\n      if (transaction[key] == null) {\n        return;\n      }\n\n      result[key] = bytes_1.hexlify(transaction[key]);\n    });\n    return result;\n  };\n\n  return JsonRpcProvider;\n}(base_provider_1.BaseProvider);\n\nexports.JsonRpcProvider = JsonRpcProvider;","map":{"version":3,"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__importStar","mod","__esModule","result","k","call","defineProperty","exports","value","base_provider_1","require","abstract_signer_1","errors","address_1","bytes_1","networks_1","properties_1","utf8_1","web_1","timer","timeout","Promise","resolve","setTimeout","getResult","payload","error","Error","message","code","data","getLowerCase","toLowerCase","_constructorGuard","_nextId","JsonRpcSigner","_super","constructorGuard","provider","addressOrIndex","_this","checkNew","defineReadOnly","getAddress","throwError","INVALID_ARGUMENT","argument","_address","send","then","accounts","length","_index","UNSUPPORTED_OPERATION","operation","getBalance","blockTag","getTransactionCount","sendUncheckedTransaction","transaction","shallowCopy","fromAddress","address","gasLimit","estimate","from","estimateGas","all","resolveProperties","results","tx","hexTx","JsonRpcProvider","hexlifyTransaction","hash","responseText","indexOf","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","sendTransaction","poll","getTransaction","undefined","_wrapTransaction","fastRetry","onceBlock","catch","transactionHash","signMessage","toUtf8Bytes","hexlify","unlock","password","Signer","allowedTransactionKeys","chainId","gasPrice","nonce","to","url","network","getNetwork","ready","reject","parseInt","connection","getSigner","listAccounts","map","a","method","params","request","id","jsonrpc","fetchJson","JSON","stringify","emit","action","response","perform","position","signedTransaction","includeTransactions","blockHash","filter","NOT_IMPLEMENTED","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","forEach","_emitted","_stopPending","allowExtra","allowed","key","checkProperties","hexStripZeros","BaseProvider"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP/coding-challenge-events-list-bootstrap/node_modules/ethers/providers/json-rpc-provider.js"],"sourcesContent":["'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\nvar base_provider_1 = require(\"./base-provider\");\nvar abstract_signer_1 = require(\"../abstract-signer\");\nvar errors = __importStar(require(\"../errors\"));\nvar address_1 = require(\"../utils/address\");\nvar bytes_1 = require(\"../utils/bytes\");\nvar networks_1 = require(\"../utils/networks\");\nvar properties_1 = require(\"../utils/properties\");\nvar utf8_1 = require(\"../utils/utf8\");\nvar web_1 = require(\"../utils/web\");\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(function () {\n            resolve();\n        }, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        var error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nvar _constructorGuard = {};\n// Some environments (Trust Wallet and company) use a global map\n// to track JSON-RPC ID, so we try to keep IDs unique across all\n// connections. See #489.\nvar _nextId = 42;\nvar JsonRpcSigner = /** @class */ (function (_super) {\n    __extends(JsonRpcSigner, _super);\n    function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {\n        var _this = _super.call(this) || this;\n        errors.checkNew(_this, JsonRpcSigner);\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error('do not call the JsonRpcSigner constructor directly; use provider.getSigner');\n        }\n        properties_1.defineReadOnly(_this, 'provider', provider);\n        // Statically attach to a given address\n        if (addressOrIndex) {\n            if (typeof (addressOrIndex) === 'string') {\n                properties_1.defineReadOnly(_this, '_address', address_1.getAddress(addressOrIndex));\n            }\n            else if (typeof (addressOrIndex) === 'number') {\n                properties_1.defineReadOnly(_this, '_index', addressOrIndex);\n            }\n            else {\n                errors.throwError('invalid address or index', errors.INVALID_ARGUMENT, { argument: 'addressOrIndex', value: addressOrIndex });\n            }\n        }\n        else {\n            properties_1.defineReadOnly(_this, '_index', 0);\n        }\n        return _this;\n    }\n    JsonRpcSigner.prototype.getAddress = function () {\n        var _this = this;\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send('eth_accounts', []).then(function (accounts) {\n            if (accounts.length <= _this._index) {\n                errors.throwError('unknown account #' + _this._index, errors.UNSUPPORTED_OPERATION, { operation: 'getAddress' });\n            }\n            _this._address = address_1.getAddress(accounts[_this._index]);\n            return _this._address;\n        });\n    };\n    JsonRpcSigner.prototype.getBalance = function (blockTag) {\n        return this.provider.getBalance(this.getAddress(), blockTag);\n    };\n    JsonRpcSigner.prototype.getTransactionCount = function (blockTag) {\n        return this.provider.getTransactionCount(this.getAddress(), blockTag);\n    };\n    JsonRpcSigner.prototype.sendUncheckedTransaction = function (transaction) {\n        var _this = this;\n        transaction = properties_1.shallowCopy(transaction);\n        var fromAddress = this.getAddress().then(function (address) {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            var estimate = properties_1.shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        return Promise.all([\n            properties_1.resolveProperties(transaction),\n            fromAddress\n        ]).then(function (results) {\n            var tx = results[0];\n            var hexTx = JsonRpcProvider.hexlifyTransaction(tx);\n            hexTx.from = results[1];\n            return _this.provider.send('eth_sendTransaction', [hexTx]).then(function (hash) {\n                return hash;\n            }, function (error) {\n                if (error.responseText) {\n                    // See: JsonRpcProvider.sendTransaction (@TODO: Expose a ._throwError??)\n                    if (error.responseText.indexOf('insufficient funds') >= 0) {\n                        errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {\n                            transaction: tx\n                        });\n                    }\n                    if (error.responseText.indexOf('nonce too low') >= 0) {\n                        errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {\n                            transaction: tx\n                        });\n                    }\n                    if (error.responseText.indexOf('replacement transaction underpriced') >= 0) {\n                        errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {\n                            transaction: tx\n                        });\n                    }\n                }\n                throw error;\n            });\n        });\n    };\n    JsonRpcSigner.prototype.sendTransaction = function (transaction) {\n        var _this = this;\n        return this.sendUncheckedTransaction(transaction).then(function (hash) {\n            return web_1.poll(function () {\n                return _this.provider.getTransaction(hash).then(function (tx) {\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return _this.provider._wrapTransaction(tx, hash);\n                });\n            }, { fastRetry: 250, onceBlock: _this.provider }).catch(function (error) {\n                error.transactionHash = hash;\n                throw error;\n            });\n        });\n    };\n    JsonRpcSigner.prototype.signMessage = function (message) {\n        var _this = this;\n        var data = ((typeof (message) === 'string') ? utf8_1.toUtf8Bytes(message) : message);\n        return this.getAddress().then(function (address) {\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return _this.provider.send('eth_sign', [address.toLowerCase(), bytes_1.hexlify(data)]);\n        });\n    };\n    JsonRpcSigner.prototype.unlock = function (password) {\n        var provider = this.provider;\n        return this.getAddress().then(function (address) {\n            return provider.send('personal_unlockAccount', [address.toLowerCase(), password, null]);\n        });\n    };\n    return JsonRpcSigner;\n}(abstract_signer_1.Signer));\nexports.JsonRpcSigner = JsonRpcSigner;\nvar allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true\n};\nvar JsonRpcProvider = /** @class */ (function (_super) {\n    __extends(JsonRpcProvider, _super);\n    function JsonRpcProvider(url, network) {\n        var _this = this;\n        // One parameter, but it is a network name, so swap it with the URL\n        if (typeof (url) === 'string') {\n            if (network === null && networks_1.getNetwork(url)) {\n                network = url;\n                url = null;\n            }\n        }\n        if (network) {\n            // The network has been specified explicitly, we can use it\n            _this = _super.call(this, network) || this;\n        }\n        else {\n            // The network is unknown, query the JSON-RPC for it\n            var ready = new Promise(function (resolve, reject) {\n                setTimeout(function () {\n                    _this.send('net_version', []).then(function (result) {\n                        return resolve(networks_1.getNetwork(parseInt(result)));\n                    }).catch(function (error) {\n                        reject(error);\n                    });\n                });\n            });\n            _this = _super.call(this, ready) || this;\n        }\n        errors.checkNew(_this, JsonRpcProvider);\n        // Default URL\n        if (!url) {\n            url = 'http://localhost:8545';\n        }\n        if (typeof (url) === 'string') {\n            _this.connection = {\n                url: url\n            };\n        }\n        else {\n            _this.connection = url;\n        }\n        return _this;\n    }\n    JsonRpcProvider.prototype.getSigner = function (addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    };\n    JsonRpcProvider.prototype.listAccounts = function () {\n        return this.send('eth_accounts', []).then(function (accounts) {\n            return accounts.map(function (a) { return address_1.getAddress(a); });\n        });\n    };\n    JsonRpcProvider.prototype.send = function (method, params) {\n        var _this = this;\n        var request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return web_1.fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {\n            _this.emit('debug', {\n                action: 'send',\n                request: request,\n                response: result,\n                provider: _this\n            });\n            return result;\n        });\n    };\n    JsonRpcProvider.prototype.perform = function (method, params) {\n        switch (method) {\n            case 'getBlockNumber':\n                return this.send('eth_blockNumber', []);\n            case 'getGasPrice':\n                return this.send('eth_gasPrice', []);\n            case 'getBalance':\n                return this.send('eth_getBalance', [getLowerCase(params.address), params.blockTag]);\n            case 'getTransactionCount':\n                return this.send('eth_getTransactionCount', [getLowerCase(params.address), params.blockTag]);\n            case 'getCode':\n                return this.send('eth_getCode', [getLowerCase(params.address), params.blockTag]);\n            case 'getStorageAt':\n                return this.send('eth_getStorageAt', [getLowerCase(params.address), params.position, params.blockTag]);\n            case 'sendTransaction':\n                return this.send('eth_sendRawTransaction', [params.signedTransaction]).catch(function (error) {\n                    if (error.responseText) {\n                        // \"insufficient funds for gas * price + value\"\n                        if (error.responseText.indexOf('insufficient funds') > 0) {\n                            errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n                        }\n                        // \"nonce too low\"\n                        if (error.responseText.indexOf('nonce too low') > 0) {\n                            errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n                        }\n                        // \"replacement transaction underpriced\"\n                        if (error.responseText.indexOf('replacement transaction underpriced') > 0) {\n                            errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n                        }\n                    }\n                    throw error;\n                });\n            case 'getBlock':\n                if (params.blockTag) {\n                    return this.send('eth_getBlockByNumber', [params.blockTag, !!params.includeTransactions]);\n                }\n                else if (params.blockHash) {\n                    return this.send('eth_getBlockByHash', [params.blockHash, !!params.includeTransactions]);\n                }\n                return Promise.reject(new Error('invalid block tag or block hash'));\n            case 'getTransaction':\n                return this.send('eth_getTransactionByHash', [params.transactionHash]);\n            case 'getTransactionReceipt':\n                return this.send('eth_getTransactionReceipt', [params.transactionHash]);\n            case 'call':\n                return this.send('eth_call', [JsonRpcProvider.hexlifyTransaction(params.transaction, { from: true }), params.blockTag]);\n            case 'estimateGas':\n                return this.send('eth_estimateGas', [JsonRpcProvider.hexlifyTransaction(params.transaction, { from: true })]);\n            case 'getLogs':\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return this.send('eth_getLogs', [params.filter]);\n            default:\n                break;\n        }\n        errors.throwError(method + ' not implemented', errors.NOT_IMPLEMENTED, { operation: method });\n        return null;\n    };\n    JsonRpcProvider.prototype._startPending = function () {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        var self = this;\n        var pendingFilter = this.send('eth_newPendingTransactionFilter', []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send('eth_getFilterChanges', [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    var seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted['t:' + hash.toLowerCase()] = 'pending';\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit('pending', tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send('eth_uninstallFilter', [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch(function (error) { });\n            }\n            poll();\n            return filterId;\n        }).catch(function (error) { });\n    };\n    JsonRpcProvider.prototype._stopPending = function () {\n        this._pendingFilter = null;\n    };\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    JsonRpcProvider.hexlifyTransaction = function (transaction, allowExtra) {\n        // Check only allowed properties are given\n        var allowed = properties_1.shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (var key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        properties_1.checkProperties(transaction, allowed);\n        var result = {};\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) don't like leading zeros.\n        ['gasLimit', 'gasPrice', 'nonce', 'value'].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            var value = bytes_1.hexStripZeros(bytes_1.hexlify(transaction[key]));\n            if (key === 'gasLimit') {\n                key = 'gas';\n            }\n            result[key] = value;\n        });\n        ['from', 'to', 'data'].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = bytes_1.hexlify(transaction[key]);\n        });\n        return result;\n    };\n    return JsonRpcProvider;\n}(base_provider_1.BaseProvider));\nexports.JsonRpcProvider = JsonRpcProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}