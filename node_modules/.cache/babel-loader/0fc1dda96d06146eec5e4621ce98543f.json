{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base_provider_1 = require(\"./base-provider\");\n\nvar bytes_1 = require(\"../utils/bytes\");\n\nvar properties_1 = require(\"../utils/properties\");\n\nvar web_1 = require(\"../utils/web\");\n\nvar errors = __importStar(require(\"../errors\")); ///////////////////////////////\n// The transaction has already been sanitized by the calls in Provider\n\n\nfunction getTransactionString(transaction) {\n  var result = [];\n\n  for (var key in transaction) {\n    if (transaction[key] == null) {\n      continue;\n    }\n\n    var value = bytes_1.hexlify(transaction[key]);\n\n    if ({\n      gasLimit: true,\n      gasPrice: true,\n      nonce: true,\n      value: true\n    }[key]) {\n      value = bytes_1.hexStripZeros(value);\n    }\n\n    result.push(key + '=' + value);\n  }\n\n  return result.join('&');\n}\n\nfunction getResult(result) {\n  // getLogs, getHistory have weird success responses\n  if (result.status == 0 && (result.message === 'No records found' || result.message === 'No transactions found')) {\n    return result.result;\n  }\n\n  if (result.status != 1 || result.message != 'OK') {\n    // @TODO: not any\n    var error = new Error('invalid response');\n    error.result = JSON.stringify(result);\n    throw error;\n  }\n\n  return result.result;\n}\n\nfunction getJsonResult(result) {\n  if (result.jsonrpc != '2.0') {\n    // @TODO: not any\n    var error = new Error('invalid response');\n    error.result = JSON.stringify(result);\n    throw error;\n  }\n\n  if (result.error) {\n    // @TODO: not any\n    var error = new Error(result.error.message || 'unknown error');\n\n    if (result.error.code) {\n      error.code = result.error.code;\n    }\n\n    if (result.error.data) {\n      error.data = result.error.data;\n    }\n\n    throw error;\n  }\n\n  return result.result;\n} // The blockTag was normalized as a string by the Provider pre-perform operations\n\n\nfunction checkLogTag(blockTag) {\n  if (blockTag === 'pending') {\n    throw new Error('pending not supported');\n  }\n\n  if (blockTag === 'latest') {\n    return blockTag;\n  }\n\n  return parseInt(blockTag.substring(2), 16);\n}\n\nvar defaultApiKey = \"8FG3JMZ9USS4NTA6YKEKHINU56SEPPVBJR\";\n\nvar EtherscanProvider =\n/** @class */\nfunction (_super) {\n  __extends(EtherscanProvider, _super);\n\n  function EtherscanProvider(network, apiKey) {\n    var _this = _super.call(this, network) || this;\n\n    errors.checkNew(_this, EtherscanProvider);\n    var name = 'invalid';\n\n    if (_this.network) {\n      name = _this.network.name;\n    }\n\n    var baseUrl = null;\n\n    switch (name) {\n      case 'homestead':\n        baseUrl = 'https://api.etherscan.io';\n        break;\n\n      case 'ropsten':\n        baseUrl = 'https://api-ropsten.etherscan.io';\n        break;\n\n      case 'rinkeby':\n        baseUrl = 'https://api-rinkeby.etherscan.io';\n        break;\n\n      case 'kovan':\n        baseUrl = 'https://api-kovan.etherscan.io';\n        break;\n\n      case 'goerli':\n        baseUrl = 'https://api-goerli.etherscan.io';\n        break;\n\n      default:\n        throw new Error('unsupported network');\n    }\n\n    properties_1.defineReadOnly(_this, 'baseUrl', baseUrl);\n    properties_1.defineReadOnly(_this, 'apiKey', apiKey || defaultApiKey);\n    return _this;\n  }\n\n  EtherscanProvider.prototype.perform = function (method, params) {\n    var _this = this;\n\n    var url = this.baseUrl;\n    var apiKey = '';\n\n    if (this.apiKey) {\n      apiKey += '&apikey=' + this.apiKey;\n    }\n\n    var get = function (url, procFunc) {\n      return web_1.fetchJson(url, null, procFunc || getJsonResult).then(function (result) {\n        _this.emit('debug', {\n          action: 'perform',\n          request: url,\n          response: result,\n          provider: _this\n        });\n\n        return result;\n      });\n    };\n\n    switch (method) {\n      case 'getBlockNumber':\n        url += '/api?module=proxy&action=eth_blockNumber' + apiKey;\n        return get(url);\n\n      case 'getGasPrice':\n        url += '/api?module=proxy&action=eth_gasPrice' + apiKey;\n        return get(url);\n\n      case 'getBalance':\n        // Returns base-10 result\n        url += '/api?module=account&action=balance&address=' + params.address;\n        url += '&tag=' + params.blockTag + apiKey;\n        return get(url, getResult);\n\n      case 'getTransactionCount':\n        url += '/api?module=proxy&action=eth_getTransactionCount&address=' + params.address;\n        url += '&tag=' + params.blockTag + apiKey;\n        return get(url);\n\n      case 'getCode':\n        url += '/api?module=proxy&action=eth_getCode&address=' + params.address;\n        url += '&tag=' + params.blockTag + apiKey;\n        return get(url, getJsonResult);\n\n      case 'getStorageAt':\n        url += '/api?module=proxy&action=eth_getStorageAt&address=' + params.address;\n        url += '&position=' + params.position;\n        url += '&tag=' + params.blockTag + apiKey;\n        return get(url, getJsonResult);\n\n      case 'sendTransaction':\n        url += '/api?module=proxy&action=eth_sendRawTransaction&hex=' + params.signedTransaction;\n        url += apiKey;\n        return get(url).catch(function (error) {\n          if (error.responseText) {\n            // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n            if (error.responseText.toLowerCase().indexOf('insufficient funds') >= 0) {\n              errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n            } // \"Transaction with the same hash was already imported.\"\n\n\n            if (error.responseText.indexOf('same hash was already imported') >= 0) {\n              errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n            } // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n\n\n            if (error.responseText.indexOf('another transaction with same nonce') >= 0) {\n              errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n            }\n          }\n\n          throw error;\n        });\n\n      case 'getBlock':\n        if (params.blockTag) {\n          url += '/api?module=proxy&action=eth_getBlockByNumber&tag=' + params.blockTag;\n\n          if (params.includeTransactions) {\n            url += '&boolean=true';\n          } else {\n            url += '&boolean=false';\n          }\n\n          url += apiKey;\n          return get(url);\n        }\n\n        return Promise.reject(new Error('getBlock by blockHash not implemeneted'));\n\n      case 'getTransaction':\n        url += '/api?module=proxy&action=eth_getTransactionByHash&txhash=' + params.transactionHash;\n        url += apiKey;\n        return get(url);\n\n      case 'getTransactionReceipt':\n        url += '/api?module=proxy&action=eth_getTransactionReceipt&txhash=' + params.transactionHash;\n        url += apiKey;\n        return get(url);\n\n      case 'call':\n        {\n          var transaction = getTransactionString(params.transaction);\n\n          if (transaction) {\n            transaction = '&' + transaction;\n          }\n\n          url += '/api?module=proxy&action=eth_call' + transaction; //url += '&tag=' + params.blockTag + apiKey;\n\n          if (params.blockTag !== 'latest') {\n            return Promise.reject(new Error('EtherscanProvider does not support blockTag for call'));\n          }\n\n          url += apiKey;\n          return get(url);\n        }\n\n      case 'estimateGas':\n        {\n          var transaction = getTransactionString(params.transaction);\n\n          if (transaction) {\n            transaction = '&' + transaction;\n          }\n\n          url += '/api?module=proxy&action=eth_estimateGas&' + transaction;\n          url += apiKey;\n          return get(url);\n        }\n\n      case 'getLogs':\n        url += '/api?module=logs&action=getLogs';\n\n        try {\n          if (params.filter.fromBlock) {\n            url += '&fromBlock=' + checkLogTag(params.filter.fromBlock);\n          }\n\n          if (params.filter.toBlock) {\n            url += '&toBlock=' + checkLogTag(params.filter.toBlock);\n          }\n\n          if (params.filter.blockHash) {\n            try {\n              errors.throwError(\"Etherscan does not support blockHash filters\", errors.UNSUPPORTED_OPERATION, {\n                operation: \"getLogs(blockHash)\"\n              });\n            } catch (error) {\n              return Promise.reject(error);\n            }\n          }\n\n          if (params.filter.address) {\n            url += '&address=' + params.filter.address;\n          } // @TODO: We can handle slightly more complicated logs using the logs API\n\n\n          if (params.filter.topics && params.filter.topics.length > 0) {\n            if (params.filter.topics.length > 1) {\n              throw new Error('unsupported topic format');\n            }\n\n            var topic0 = params.filter.topics[0];\n\n            if (typeof topic0 !== 'string' || topic0.length !== 66) {\n              throw new Error('unsupported topic0 format');\n            }\n\n            url += '&topic0=' + topic0;\n          }\n        } catch (error) {\n          return Promise.reject(error);\n        }\n\n        url += apiKey;\n        var self = this;\n        return get(url, getResult).then(function (logs) {\n          var txs = {};\n          var seq = Promise.resolve();\n          logs.forEach(function (log) {\n            seq = seq.then(function () {\n              if (log.blockHash != null) {\n                return null;\n              }\n\n              log.blockHash = txs[log.transactionHash];\n\n              if (log.blockHash == null) {\n                return self.getTransaction(log.transactionHash).then(function (tx) {\n                  txs[log.transactionHash] = tx.blockHash;\n                  log.blockHash = tx.blockHash;\n                  return null;\n                });\n              }\n\n              return null;\n            });\n          });\n          return seq.then(function () {\n            return logs;\n          });\n        });\n\n      case 'getEtherPrice':\n        if (this.network.name !== 'homestead') {\n          return Promise.resolve(0.0);\n        }\n\n        url += '/api?module=stats&action=ethprice';\n        url += apiKey;\n        return get(url, getResult).then(function (result) {\n          return parseFloat(result.ethusd);\n        });\n\n      default:\n        break;\n    }\n\n    return _super.prototype.perform.call(this, method, params);\n  }; // @TODO: Allow startBlock and endBlock to be Promises\n\n\n  EtherscanProvider.prototype.getHistory = function (addressOrName, startBlock, endBlock) {\n    var _this = this;\n\n    var url = this.baseUrl;\n    var apiKey = '';\n\n    if (this.apiKey) {\n      apiKey += '&apikey=' + this.apiKey;\n    }\n\n    if (startBlock == null) {\n      startBlock = 0;\n    }\n\n    if (endBlock == null) {\n      endBlock = 99999999;\n    }\n\n    return this.resolveName(addressOrName).then(function (address) {\n      url += '/api?module=account&action=txlist&address=' + address;\n      url += '&startblock=' + startBlock;\n      url += '&endblock=' + endBlock;\n      url += '&sort=asc' + apiKey;\n      return web_1.fetchJson(url, null, getResult).then(function (result) {\n        _this.emit('debug', {\n          action: 'getHistory',\n          request: url,\n          response: result,\n          provider: _this\n        });\n\n        var output = [];\n        result.forEach(function (tx) {\n          ['contractAddress', 'to'].forEach(function (key) {\n            if (tx[key] == '') {\n              delete tx[key];\n            }\n          });\n\n          if (tx.creates == null && tx.contractAddress != null) {\n            tx.creates = tx.contractAddress;\n          }\n\n          var item = base_provider_1.BaseProvider.checkTransactionResponse(tx);\n\n          if (tx.timeStamp) {\n            item.timestamp = parseInt(tx.timeStamp);\n          }\n\n          output.push(item);\n        });\n        return output;\n      });\n    });\n  };\n\n  return EtherscanProvider;\n}(base_provider_1.BaseProvider);\n\nexports.EtherscanProvider = EtherscanProvider;","map":{"version":3,"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__importStar","mod","__esModule","result","k","call","defineProperty","exports","value","base_provider_1","require","bytes_1","properties_1","web_1","errors","getTransactionString","transaction","key","hexlify","gasLimit","gasPrice","nonce","hexStripZeros","push","join","getResult","status","message","error","Error","JSON","stringify","getJsonResult","jsonrpc","code","data","checkLogTag","blockTag","parseInt","substring","defaultApiKey","EtherscanProvider","_super","network","apiKey","_this","checkNew","name","baseUrl","defineReadOnly","perform","method","params","url","get","procFunc","fetchJson","then","emit","action","request","response","provider","address","position","signedTransaction","catch","responseText","toLowerCase","indexOf","throwError","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","includeTransactions","Promise","reject","transactionHash","filter","fromBlock","toBlock","blockHash","UNSUPPORTED_OPERATION","operation","topics","length","topic0","self","logs","txs","seq","resolve","forEach","log","getTransaction","tx","parseFloat","ethusd","getHistory","addressOrName","startBlock","endBlock","resolveName","output","creates","contractAddress","item","BaseProvider","checkTransactionResponse","timeStamp","timestamp"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP copy/coding-challenge-events-list-bootstrap/node_modules/ethers/providers/etherscan-provider.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar base_provider_1 = require(\"./base-provider\");\nvar bytes_1 = require(\"../utils/bytes\");\nvar properties_1 = require(\"../utils/properties\");\nvar web_1 = require(\"../utils/web\");\nvar errors = __importStar(require(\"../errors\"));\n///////////////////////////////\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionString(transaction) {\n    var result = [];\n    for (var key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        var value = bytes_1.hexlify(transaction[key]);\n        if ({ gasLimit: true, gasPrice: true, nonce: true, value: true }[key]) {\n            value = bytes_1.hexStripZeros(value);\n        }\n        result.push(key + '=' + value);\n    }\n    return result.join('&');\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === 'No records found' || result.message === 'No transactions found')) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != 'OK') {\n        // @TODO: not any\n        var error = new Error('invalid response');\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    if (result.jsonrpc != '2.0') {\n        // @TODO: not any\n        var error = new Error('invalid response');\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        var error = new Error(result.error.message || 'unknown error');\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === 'pending') {\n        throw new Error('pending not supported');\n    }\n    if (blockTag === 'latest') {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nvar defaultApiKey = \"8FG3JMZ9USS4NTA6YKEKHINU56SEPPVBJR\";\nvar EtherscanProvider = /** @class */ (function (_super) {\n    __extends(EtherscanProvider, _super);\n    function EtherscanProvider(network, apiKey) {\n        var _this = _super.call(this, network) || this;\n        errors.checkNew(_this, EtherscanProvider);\n        var name = 'invalid';\n        if (_this.network) {\n            name = _this.network.name;\n        }\n        var baseUrl = null;\n        switch (name) {\n            case 'homestead':\n                baseUrl = 'https://api.etherscan.io';\n                break;\n            case 'ropsten':\n                baseUrl = 'https://api-ropsten.etherscan.io';\n                break;\n            case 'rinkeby':\n                baseUrl = 'https://api-rinkeby.etherscan.io';\n                break;\n            case 'kovan':\n                baseUrl = 'https://api-kovan.etherscan.io';\n                break;\n            case 'goerli':\n                baseUrl = 'https://api-goerli.etherscan.io';\n                break;\n            default:\n                throw new Error('unsupported network');\n        }\n        properties_1.defineReadOnly(_this, 'baseUrl', baseUrl);\n        properties_1.defineReadOnly(_this, 'apiKey', apiKey || defaultApiKey);\n        return _this;\n    }\n    EtherscanProvider.prototype.perform = function (method, params) {\n        var _this = this;\n        var url = this.baseUrl;\n        var apiKey = '';\n        if (this.apiKey) {\n            apiKey += '&apikey=' + this.apiKey;\n        }\n        var get = function (url, procFunc) {\n            return web_1.fetchJson(url, null, procFunc || getJsonResult).then(function (result) {\n                _this.emit('debug', {\n                    action: 'perform',\n                    request: url,\n                    response: result,\n                    provider: _this\n                });\n                return result;\n            });\n        };\n        switch (method) {\n            case 'getBlockNumber':\n                url += '/api?module=proxy&action=eth_blockNumber' + apiKey;\n                return get(url);\n            case 'getGasPrice':\n                url += '/api?module=proxy&action=eth_gasPrice' + apiKey;\n                return get(url);\n            case 'getBalance':\n                // Returns base-10 result\n                url += '/api?module=account&action=balance&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getResult);\n            case 'getTransactionCount':\n                url += '/api?module=proxy&action=eth_getTransactionCount&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url);\n            case 'getCode':\n                url += '/api?module=proxy&action=eth_getCode&address=' + params.address;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getJsonResult);\n            case 'getStorageAt':\n                url += '/api?module=proxy&action=eth_getStorageAt&address=' + params.address;\n                url += '&position=' + params.position;\n                url += '&tag=' + params.blockTag + apiKey;\n                return get(url, getJsonResult);\n            case 'sendTransaction':\n                url += '/api?module=proxy&action=eth_sendRawTransaction&hex=' + params.signedTransaction;\n                url += apiKey;\n                return get(url).catch(function (error) {\n                    if (error.responseText) {\n                        // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n                        if (error.responseText.toLowerCase().indexOf('insufficient funds') >= 0) {\n                            errors.throwError('insufficient funds', errors.INSUFFICIENT_FUNDS, {});\n                        }\n                        // \"Transaction with the same hash was already imported.\"\n                        if (error.responseText.indexOf('same hash was already imported') >= 0) {\n                            errors.throwError('nonce has already been used', errors.NONCE_EXPIRED, {});\n                        }\n                        // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n                        if (error.responseText.indexOf('another transaction with same nonce') >= 0) {\n                            errors.throwError('replacement fee too low', errors.REPLACEMENT_UNDERPRICED, {});\n                        }\n                    }\n                    throw error;\n                });\n            case 'getBlock':\n                if (params.blockTag) {\n                    url += '/api?module=proxy&action=eth_getBlockByNumber&tag=' + params.blockTag;\n                    if (params.includeTransactions) {\n                        url += '&boolean=true';\n                    }\n                    else {\n                        url += '&boolean=false';\n                    }\n                    url += apiKey;\n                    return get(url);\n                }\n                return Promise.reject(new Error('getBlock by blockHash not implemeneted'));\n            case 'getTransaction':\n                url += '/api?module=proxy&action=eth_getTransactionByHash&txhash=' + params.transactionHash;\n                url += apiKey;\n                return get(url);\n            case 'getTransactionReceipt':\n                url += '/api?module=proxy&action=eth_getTransactionReceipt&txhash=' + params.transactionHash;\n                url += apiKey;\n                return get(url);\n            case 'call': {\n                var transaction = getTransactionString(params.transaction);\n                if (transaction) {\n                    transaction = '&' + transaction;\n                }\n                url += '/api?module=proxy&action=eth_call' + transaction;\n                //url += '&tag=' + params.blockTag + apiKey;\n                if (params.blockTag !== 'latest') {\n                    return Promise.reject(new Error('EtherscanProvider does not support blockTag for call'));\n                }\n                url += apiKey;\n                return get(url);\n            }\n            case 'estimateGas': {\n                var transaction = getTransactionString(params.transaction);\n                if (transaction) {\n                    transaction = '&' + transaction;\n                }\n                url += '/api?module=proxy&action=eth_estimateGas&' + transaction;\n                url += apiKey;\n                return get(url);\n            }\n            case 'getLogs':\n                url += '/api?module=logs&action=getLogs';\n                try {\n                    if (params.filter.fromBlock) {\n                        url += '&fromBlock=' + checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        url += '&toBlock=' + checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.blockHash) {\n                        try {\n                            errors.throwError(\"Etherscan does not support blockHash filters\", errors.UNSUPPORTED_OPERATION, {\n                                operation: \"getLogs(blockHash)\"\n                            });\n                        }\n                        catch (error) {\n                            return Promise.reject(error);\n                        }\n                    }\n                    if (params.filter.address) {\n                        url += '&address=' + params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            throw new Error('unsupported topic format');\n                        }\n                        var topic0 = params.filter.topics[0];\n                        if (typeof (topic0) !== 'string' || topic0.length !== 66) {\n                            throw new Error('unsupported topic0 format');\n                        }\n                        url += '&topic0=' + topic0;\n                    }\n                }\n                catch (error) {\n                    return Promise.reject(error);\n                }\n                url += apiKey;\n                var self = this;\n                return get(url, getResult).then(function (logs) {\n                    var txs = {};\n                    var seq = Promise.resolve();\n                    logs.forEach(function (log) {\n                        seq = seq.then(function () {\n                            if (log.blockHash != null) {\n                                return null;\n                            }\n                            log.blockHash = txs[log.transactionHash];\n                            if (log.blockHash == null) {\n                                return self.getTransaction(log.transactionHash).then(function (tx) {\n                                    txs[log.transactionHash] = tx.blockHash;\n                                    log.blockHash = tx.blockHash;\n                                    return null;\n                                });\n                            }\n                            return null;\n                        });\n                    });\n                    return seq.then(function () {\n                        return logs;\n                    });\n                });\n            case 'getEtherPrice':\n                if (this.network.name !== 'homestead') {\n                    return Promise.resolve(0.0);\n                }\n                url += '/api?module=stats&action=ethprice';\n                url += apiKey;\n                return get(url, getResult).then(function (result) {\n                    return parseFloat(result.ethusd);\n                });\n            default:\n                break;\n        }\n        return _super.prototype.perform.call(this, method, params);\n    };\n    // @TODO: Allow startBlock and endBlock to be Promises\n    EtherscanProvider.prototype.getHistory = function (addressOrName, startBlock, endBlock) {\n        var _this = this;\n        var url = this.baseUrl;\n        var apiKey = '';\n        if (this.apiKey) {\n            apiKey += '&apikey=' + this.apiKey;\n        }\n        if (startBlock == null) {\n            startBlock = 0;\n        }\n        if (endBlock == null) {\n            endBlock = 99999999;\n        }\n        return this.resolveName(addressOrName).then(function (address) {\n            url += '/api?module=account&action=txlist&address=' + address;\n            url += '&startblock=' + startBlock;\n            url += '&endblock=' + endBlock;\n            url += '&sort=asc' + apiKey;\n            return web_1.fetchJson(url, null, getResult).then(function (result) {\n                _this.emit('debug', {\n                    action: 'getHistory',\n                    request: url,\n                    response: result,\n                    provider: _this\n                });\n                var output = [];\n                result.forEach(function (tx) {\n                    ['contractAddress', 'to'].forEach(function (key) {\n                        if (tx[key] == '') {\n                            delete tx[key];\n                        }\n                    });\n                    if (tx.creates == null && tx.contractAddress != null) {\n                        tx.creates = tx.contractAddress;\n                    }\n                    var item = base_provider_1.BaseProvider.checkTransactionResponse(tx);\n                    if (tx.timeStamp) {\n                        item.timestamp = parseInt(tx.timeStamp);\n                    }\n                    output.push(item);\n                });\n                return output;\n            });\n        });\n    };\n    return EtherscanProvider;\n}(base_provider_1.BaseProvider));\nexports.EtherscanProvider = EtherscanProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}