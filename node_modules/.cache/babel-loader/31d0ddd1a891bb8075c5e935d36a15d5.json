{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst IColonyFactory_1 = require(\"../../contracts/3/IColonyFactory\");\n\nconst constants_1 = require(\"../../constants\");\n\nconst extensionsV3_1 = require(\"./extensions/extensionsV3\");\n\nconst SetPaymentDomain_1 = require(\"./extensions/SetPaymentDomain\");\n\nfunction getColonyClient(address, signerOrProvider) {\n  const colonyClient = IColonyFactory_1.IColonyFactory.connect(address, signerOrProvider);\n  colonyClient.clientVersion = constants_1.ColonyVersion.AuburnGlider;\n  extensionsV3_1.addExtensions(colonyClient, this);\n  /* eslint-disable max-len */\n\n  colonyClient.setPaymentDomainWithProofs = SetPaymentDomain_1.setPaymentDomainWithProofs.bind(colonyClient);\n  colonyClient.estimate.setPaymentDomainWithProofs = SetPaymentDomain_1.estimateSetPaymentDomainWithProofs.bind(colonyClient);\n  /* eslint-enable max-len */\n\n  return colonyClient;\n}\n\nexports.default = getColonyClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","IColonyFactory_1","require","constants_1","extensionsV3_1","SetPaymentDomain_1","getColonyClient","address","signerOrProvider","colonyClient","IColonyFactory","connect","clientVersion","ColonyVersion","AuburnGlider","addExtensions","setPaymentDomainWithProofs","bind","estimate","estimateSetPaymentDomainWithProofs","default"],"sources":["/Users/jatanasov/Documents/Projects/Colony_BACKUP copy/coding-challenge-events-list-bootstrap/node_modules/@colony/colony-js/lib/clients/Colony/ColonyClientV3.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IColonyFactory_1 = require(\"../../contracts/3/IColonyFactory\");\nconst constants_1 = require(\"../../constants\");\nconst extensionsV3_1 = require(\"./extensions/extensionsV3\");\nconst SetPaymentDomain_1 = require(\"./extensions/SetPaymentDomain\");\nfunction getColonyClient(address, signerOrProvider) {\n    const colonyClient = IColonyFactory_1.IColonyFactory.connect(address, signerOrProvider);\n    colonyClient.clientVersion = constants_1.ColonyVersion.AuburnGlider;\n    extensionsV3_1.addExtensions(colonyClient, this);\n    /* eslint-disable max-len */\n    colonyClient.setPaymentDomainWithProofs = SetPaymentDomain_1.setPaymentDomainWithProofs.bind(colonyClient);\n    colonyClient.estimate.setPaymentDomainWithProofs = SetPaymentDomain_1.estimateSetPaymentDomainWithProofs.bind(colonyClient);\n    /* eslint-enable max-len */\n    return colonyClient;\n}\nexports.default = getColonyClient;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,kCAAD,CAAhC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,2BAAD,CAA9B;;AACA,MAAMG,kBAAkB,GAAGH,OAAO,CAAC,+BAAD,CAAlC;;AACA,SAASI,eAAT,CAAyBC,OAAzB,EAAkCC,gBAAlC,EAAoD;EAChD,MAAMC,YAAY,GAAGR,gBAAgB,CAACS,cAAjB,CAAgCC,OAAhC,CAAwCJ,OAAxC,EAAiDC,gBAAjD,CAArB;EACAC,YAAY,CAACG,aAAb,GAA6BT,WAAW,CAACU,aAAZ,CAA0BC,YAAvD;EACAV,cAAc,CAACW,aAAf,CAA6BN,YAA7B,EAA2C,IAA3C;EACA;;EACAA,YAAY,CAACO,0BAAb,GAA0CX,kBAAkB,CAACW,0BAAnB,CAA8CC,IAA9C,CAAmDR,YAAnD,CAA1C;EACAA,YAAY,CAACS,QAAb,CAAsBF,0BAAtB,GAAmDX,kBAAkB,CAACc,kCAAnB,CAAsDF,IAAtD,CAA2DR,YAA3D,CAAnD;EACA;;EACA,OAAOA,YAAP;AACH;;AACDV,OAAO,CAACqB,OAAR,GAAkBd,eAAlB"},"metadata":{},"sourceType":"script"}