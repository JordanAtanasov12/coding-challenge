{"ast":null,"code":"import { getLogs } from '@colony/colony-js';\nimport ColonyNetworkClient from '../clients/ColonyNetworkClient';\nexport default class LogsService {\n  constructor() {\n    this.colonyClient = void 0;\n    this.networkClient = void 0;\n    this.networkClient = new ColonyNetworkClient();\n  }\n\n  async getParsedLogs(filter) {\n    this.colonyClient = await this.networkClient.getClient();\n    const payoutClaimedEventLogs = await getLogs(this.colonyClient, filter);\n    const payoutClaimedLogs = payoutClaimedEventLogs.map(event => this.colonyClient.interface.parseLog(event));\n    return payoutClaimedLogs;\n  }\n\n}","map":{"version":3,"names":["getLogs","ColonyNetworkClient","LogsService","constructor","colonyClient","networkClient","getParsedLogs","filter","getClient","payoutClaimedEventLogs","payoutClaimedLogs","map","event","interface","parseLog"],"sources":["/Users/jatanasov/Documents/Projects/Colony/coding-challenge-events-list-bootstrap/src/services/LogsService.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { getColonyNetworkClient, Network, ColonyRole, getBlockTime } from '@colony/colony-js';\nimport { EventFilter, Wallet } from 'ethers';\nimport { InfuraProvider } from 'ethers/providers';\nimport { getLogs } from '@colony/colony-js';\nimport { Filter, Log, Provider } from 'ethers/providers';\nimport { utils } from 'ethers';\nimport {Promise} from 'es6-promise';\nimport ColonyNetworkClient  from '../clients/ColonyNetworkClient';\nimport { PayoutClaimedItem } from '../interfaces/PayoutClaimedItem';\n\nexport default class LogsService {\n    private colonyClient: any;\n    private networkClient: any;\n\n    constructor() {\n        this.networkClient = new ColonyNetworkClient;\n    }\n\n    async getParsedLogs(filter: EventFilter) {\n        \n        this.colonyClient = await this.networkClient.getClient();\n        const payoutClaimedEventLogs: any = await getLogs(this.colonyClient, filter);\n        const payoutClaimedLogs: PayoutClaimedItem[] = payoutClaimedEventLogs.map((event: any) => this.colonyClient.interface.parseLog(event));\n        return payoutClaimedLogs;\n    }\n}\n"],"mappings":"AAIA,SAASA,OAAT,QAAwB,mBAAxB;AAIA,OAAOC,mBAAP,MAAiC,gCAAjC;AAGA,eAAe,MAAMC,WAAN,CAAkB;EAI7BC,WAAW,GAAG;IAAA,KAHNC,YAGM;IAAA,KAFNC,aAEM;IACV,KAAKA,aAAL,GAAqB,IAAIJ,mBAAJ,EAArB;EACH;;EAEkB,MAAbK,aAAa,CAACC,MAAD,EAAsB;IAErC,KAAKH,YAAL,GAAoB,MAAM,KAAKC,aAAL,CAAmBG,SAAnB,EAA1B;IACA,MAAMC,sBAA2B,GAAG,MAAMT,OAAO,CAAC,KAAKI,YAAN,EAAoBG,MAApB,CAAjD;IACA,MAAMG,iBAAsC,GAAGD,sBAAsB,CAACE,GAAvB,CAA4BC,KAAD,IAAgB,KAAKR,YAAL,CAAkBS,SAAlB,CAA4BC,QAA5B,CAAqCF,KAArC,CAA3C,CAA/C;IACA,OAAOF,iBAAP;EACH;;AAd4B"},"metadata":{},"sourceType":"module"}